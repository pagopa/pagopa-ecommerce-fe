<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="/home/pagopa-ecommerce/pagopa-ecommerce-fe/src/utils/api/__tests__/pollingHelpers.test.ts">
    <testCase name="decodeFinalStatusResult returns false when counter reaches retries" duration="48"/>
    <testCase name="decodeFinalStatusResult returns true for non-200 status immediately" duration="1"/>
    <testCase name="decodeFinalStatusResult returns false when 200 + interrupt" duration="1"/>
    <testCase name="decodeFinalStatusResult returns true when 200 + no interrupt" duration="1"/>
  </file>
  <file path="/home/pagopa-ecommerce/pagopa-ecommerce-fe/src/utils/__tests__/urlUtilities.test.ts">
    <testCase name="getUrlParameter returns empty string when parameter not present" duration="5"/>
    <testCase name="getUrlParameter returns decoded value when present" duration="1"/>
    <testCase name="getUrlParameter handles multiple parameters" duration="0"/>
    <testCase name="getFragmentParameter returns empty on invalid URI" duration="1"/>
    <testCase name="getFragmentParameter returns empty when fragment missing" duration="1"/>
    <testCase name="getFragmentParameter returns fragment value when exists" duration="1"/>
    <testCase name="getFragmentParameter returns empty for nonexistent fragment" duration="1"/>
    <testCase name="getBase64Fragment decodes base64 fragment" duration="1"/>
    <testCase name="getFragments returns an object mapping fragments" duration="2"/>
    <testCase name="redirectToClient redirects IO client with transactionId" duration="2"/>
    <testCase name="redirectToClient redirects IO client without transactionId" duration="1"/>
    <testCase name="redirectToClient redirects CHECKOUT client" duration="1"/>
    <testCase name="redirectToClient defaults to CHECKOUT on unknown clientId" duration="1"/>
  </file>
  <file path="/home/pagopa-ecommerce/pagopa-ecommerce-fe/src/utils/config/__tests__/config.test.ts">
    <testCase name="config module getConfig() should decode a valid environment" duration="129"/>
    <testCase name="config module getConfig() should return Left when required vars are missing" duration="84"/>
    <testCase name="config module getConfigOrThrow() should throw on invalid config" duration="65"/>
    <testCase name="config module getConfigOrThrow() should return IConfig on valid env" duration="62"/>
  </file>
  <file path="/home/pagopa-ecommerce/pagopa-ecommerce-fe/src/utils/api/transactions/__tests__/getTransactionInfo.unit.test.ts">
    <testCase name="ecommerceIOGetTransactionInfo returns Some(value) when client returns Right with status 200" duration="5"/>
    <testCase name="ecommerceIOGetTransactionInfo returns None when client returns Right with non-200 status" duration="1"/>
    <testCase name="ecommerceIOGetTransactionInfo returns None when client throws an error" duration="1"/>
    <testCase name="ecommerceCHECKOUTGetTransaction returns Some(value) when client returns Right with status 200" duration="1"/>
    <testCase name="ecommerceCHECKOUTGetTransaction returns None when client returns Right with non-200 status" duration="1"/>
    <testCase name="ecommerceCHECKOUTGetTransaction returns None when client throws an error" duration="0"/>
  </file>
  <file path="/home/pagopa-ecommerce/pagopa-ecommerce-fe/src/utils/api/__tests__/client.test.ts">
    <testCase name="clientWithPolling module creates IO client with polling" duration="7"/>
    <testCase name="clientWithPolling module creates CHECKOUT v1 client with polling" duration="2"/>
    <testCase name="clientWithPolling module creates CHECKOUT v2 client with polling" duration="9"/>
  </file>
  <file path="/home/pagopa-ecommerce/pagopa-ecommerce-fe/src/utils/config/__tests__/fetch.test.ts">
    <testCase name="exponetialPollingWithPromisePredicateFetch backoff behavior should increase delay exponentially after RETRY_NUMBERS_LINEAR attempts" duration="15"/>
  </file>
  <file path="/home/pagopa-ecommerce/pagopa-ecommerce-fe/src/routes/__tests__/GdiCheckPage.test.tsx">
    <testCase name="GdiCheckPage navigates to the correct route after the configured timeout" duration="61"/>
  </file>
  <file path="/home/pagopa-ecommerce/pagopa-ecommerce-fe/src/routes/__tests__/PaymentResponsePage.test.tsx">
    <testCase name="PaymentResponsePage redirects immediately to GENERIC_ERROR if no fragments" duration="53"/>
    <testCase name="PaymentResponsePage calls IO-get + redirects to GENERIC_ERROR when API yields none" duration="7"/>
    <testCase name="PaymentResponsePage on SUCCESS shows continue button only after the delay (IO)" duration="28"/>
    <testCase name="PaymentResponsePage calls CHECKOUT-get + redirects to GENERIC_ERROR when API yields none (CHECKOUT)" duration="4"/>
    <testCase name="PaymentResponsePage calls CHECKOUT-get + redirects to SUCCESS when API yields some (CHECKOUT)" duration="10"/>
  </file>
</testExecutions>